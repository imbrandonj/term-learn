const JSTERMS = {/*
    "false": "(T/F): It is the best practice to place all JavaScript scripts at the beginning of an HTML file so that they will not be run until after the Document Object Model has been created.",
    "hotChocolate.addToOrder(1)": "Which JavaScript statement calls a method addToOrder() associated with the hotChocolate object, passing the argument 1 to this method?",
    "API": "a set of procedures that access an application",
    "true": "(T/F): The Document Object Model and the Browser Object Model are examples of an Application Programming Interface(API)",
    "true": "(T/F): JavaScript libraries such as Node.js and jQuery can be downloaded and then utilized to create and manage large web applications more effectively when connected to the HTML file through a script element in the head section.",
    "true": "(T/F): An HTML document that is well formed and correctly written according to the element definitions in HTML’s specific language definition is considered a valid document.",
    "validation": "the process of verifying that your document is well formed and checking that the elements in your document are correctly written according to the element definitions in a specific DTD (document type definition)",
    "true": "(T/F): The JavaScript window.alert() method makes a dialog box appear that contains the literal string passed to it plus an OK button that can be clicked to close the box.",
    "window.alert()": "What method makes a dialog box appear that contains the literal string passed to it plus an OK button that can be clicked to close the box.",
    "true": "(T/F): In the context of programming web applications, a user typing in a form field with a keyboard, the occurrence of an error as a browser attempts to load a page, and a user touching a webpage element on a mobile phone screen are all examples of events.",
    "<input type=\"submit\" onclick=\"window.alert('Welcome!')\" />": "Write an inline script event handler attribute to display a dialog box that says \"Welcome!\" when the webpage user clicks or taps a submit button.",
    "Document Object Model": "describes how to access the contents of a web page and user actions within that page",
    "Browser Object Model": "describes how to access the features and behaviors of the browser itself",
    "true": "(T/F): 89 would NOT be represented as a floating point number in JavaScript",
    "document.getElementById(\"quantity\").onchange = calcTotal": "Write a statement that gets the document id \"quantity\" and runs the function calcTotal() each time the user changes an input control on this id.",
    "object.onchange = function": "To apply the onchange event handler to the JavaScript form control, apply this statement",
    "capture phase": "The propagation of an event moving down the object hierarchy from the most general object to the most specific or from the browser window to the innermost object.",
    "true": "(T/F): Most browsers display error messages they generate in a console that can be opened by website developers, and developers can use this console as a helpful debugging tool.",
    "function": "What programming structure that can be called repeatedly throughout a program consists of a collection of statements that share a common purpose or calculate a value?",
    "document.getElementById(\"numberOfParticipants\").value": "Write an expression that retrieves the value from the input control with the id \"numberOfParticipants\"",
    "false": "(T/F): document.getElementById(\"extraCheese\").checked; retrieves the Boolean value \"false\" when the user has selected (ticked) the box",
    "object.checked": "To retrieve the checked status of a checkbox, use the expression...",
    "binary operator": "The addition sign (+) is an example of what type of operator?",
    "unary operator": "The incremenent operator (++) is an example of what type of operator?",
    "document.links.length": "This expression returns the number of links in the document",
    "document.images[2]": "Write an expression that references the third image in the document",
    "true": "(T/F): Usually, when a programmer needs to iterate over an array in JavaScript, an array method will be a faster and more compact choice than a program loop.",
    "true": "(T/F): If you write the JavaScript code specialInstructions:in front of a series of statements, you create a label for those statements that you can reference elsewhere in the program.",
    "document.getElementsByTagName(\"td\")": "This expression will reference the HTML collection of elements with the \"td\" tag",
    "false": "(T/F): It is best practice for counter variables to have global scope.",
    "true": "(T/F): Throwing an exception outside the try catch block will cause the program to halt.",
    "false": "(T/F): Throwing an exception inside a try catch block will cause the program to halt.",
    "finally": "This command block always runs, whether or not an exception is thrown by a try statement.",
    "false": "(T/F): You can correct an error in a JavaScript program by creating an event listener that runs a function",
    "window.addEventListener(\"error\", function)": "This command creates an event listener that runs a function in response to an error.",
    "runtime error": "attempting to use a variable defined within one function to perform calculations in a different function will result in a...",
    "logic": "The order in which various parts of a program run, or execute.",
    "load time error": "syntax error",
    "load time error": "document.writ() is an example of what type of error?",
    "runtime error": "An error that occurs when a JavaScript interpreter encounters a problem while a program is executing.",
    "logic error": "A flaw in a program’s design that prevents the program from running as anticipated.",
    "\"use strict\";": "To enforce adherence to JavaScript syntax add this text string to the beginning of the code...",
    "load time error": "he interpreter finds error in the syntax of the code as it initially loads it",
    "runtime error": "the interpret has loaded the code but is unable to run it due to such factors as an unreferenced variable or a mistyped function name",
    "load time error": "A syntax mistake such as a misspelled keyword will result in a...",
    "logic error": "Commenting out lines and observing the change is an efficient way to locate these this type of bug...",
    "false": "(T/F): It is considered a best practice for web apps to open new browser windows in many situations because they are not blocked by the popup blockers built into browsers, they scale well to small mobile devices, and they can display files that are loaded locally on the user’s device.",
    "JavaScript": "It's primary role is managing the operation of and output from the app",
    "node.children[2]": "This expression references the third element that is a direct child of the node object",
    "node.firstElementChild": "Expression indicating the first element within a node",
    "node.lastElementChild": "Expression indicating the last element within a node",
    "node.parentElement": "Expression indicating the parent element of a node",
    "node.children": "Expression indicating a node list of all elements which are direct children of a node",
    "false": "(T/F): The statement window.open(\"src\", \"New Window\", toolbar=0, menubar=0); will open a new browser window that includes the browser menu bar and toolbar.",
    "true": "(T/F): The statement window.open(\"src\", \"New Window\", toolbar=1, menubar=1); will open a new browser window that includes the browser menu bar and toolbar.",
    "true": "(T/F): If the node is aleady part of a document tree, the appendChild() method moves the node from its current location to that new position.",
    "document": "This is the root node of a web document",
    "node tree": "In the Document Object Model, nodes are organized into a hierarchical structured called a...",
    "false": "(T/F): The html element is considered the root node of a web document",
    "true": "(T/F): In the Document Object Model, the elements, attributes, comments, processing instructions, and text strings of a web document are organized into a hierarchical structure",
    "window.setTimeout(logOut, 60000)": "Write a statement that runs the function \"logOut\" after a 1-minute delay",
    "setInterval()": "This method repeats a command at set intervals",
    "clearTimeout()": "This method prevents a delayed command from running",
    "navigator.language": "This property returns information on the browser's primary language",
    "navigator.platform": "This property returns information about the platform on which the browser is running",
    "orderForm.elements.crustStyle.onchange = updateOrder": "Write a statement that runs the updateOrder function each time a selection list named crustStyle, an element of orderForm, changes.",
    "hierarchy": "A web form that allows users to select choices from a drop-down menu would be organized as a...",
    "false": "(T/F): A web form that allows users to select choices from a drop-down menu would be organized as an array that includes an element followed by three options.",
    "true": "(T/F): A web form that allows users to select choices from a drop-down menu would be organized as a hierarchy that includes an element with three otions as its children.",
    "element.focus()": "This method will cause a selection list in a web form to become active and ready for data entry.",
    "price.toLocaleString(\"en-US\", {style: \"currency\", currency: \"USD\"})": "Write a statement that returns a string showing the numeric value stored in a variable named price, reformatted as U.S. dollars.",
    "true": "You can apply the preventDefault() method to the event object that is captured by an invalid event listener in order to prevent the default browser actions associated with that invalid event when it occurs.",
    "document.forms.payment.elements.cardName.checkValidity()" : "Write a statement using the checkValidity() method (which returns a boolean) to check the validity of a field named \"cardName\" in a form named \"payment\".",
    "string": "The toFixed() method returns what data type?",
    "amountDue.toFixed(2)": "Write a statement that returns amountDue (a numeric value of 2.2199834) to the string \"2.22\"",
    "true": "(T/F): When applying the toLocaleString() method, you can include \"useGroup: true\" as an optional parameter to indicate that a thousands grouping symbol should be used to format a number.",
    "false": "(T/F): The JavaScript reset() method is typically applied to an individual field in a web form to indicate that an invalid value has been entered.",
    "const, let": "These variable types are block scoped, meaning their scope is limited to the command black in which they are defined, or any code nested within that block",
    "var": "This variable type is function scoped",
    "local scope": "Block scope and function scope are collectively referred to as...",
    "global scope": "Variables or functions defined outside of any command block or function",
    "null": "This primitive data type represents an empty value",
    "undefined": "This primitive data type represents an unassigned, undeclared, or nonexistent value",
    "exponentiaal notation": "A shortened format for writing very large numbers or numbers with many decimal places with the letter e separating the decimal and exponent parts of the value",
    "Infinity": "Floating point values beyond 1.8 x 10^308 are assigned the keyword...",
    "template literal": "A text string enclosed with the backtick character ( `) which allows the string to be written across several lines and be made available to JavaScript tools for handling text characters.",
    "false": "(T/F): JavaScript has the data type char",
    "escape character": "The backslash character (\), which tells JavaScript compilers and interpreters that the character that follows it has a special purpose.",
    "block scope": "What is the scope of variables declared with the let keyword?",
    ".": "Property access operator",
    "[]": "Array index operator",
    "typeof": "Determines the data type of a variable",
    "instanceof": "Returns true if an object is of a specified object type",
    "object.value": "A value inserted into an input control can be referenced by this expression...",
    "object.addEventListener(\"change\", function)": "To apply a change event listener which triggers a function, write this statement...",
    "document.getElementById(\"quantity\").onchange = getEstimate": "Write a statement that triggers a functioned named getEstimate when the document id \"quantity\" changes",
    "bubbling phase": "The propagation of an event moving up the object hierarchy from the most specific object to the most general or from the innermost object to the browser window.",
    "object.addEventListener(\"event\", function, capture)": "To attach an event listener to an object, apply this method...",
    "false": "The default value of capture in an event listener method",
    "true": "(T/F): You can use anonymous functions with both event handlers and event listeners",
    "event listener": "The difference between an event handler and event listener is that this one allows multiple event functions for the same event",
    "window.addEventListener(\"load\", setupForm)": "Write an event listener for the load event which runs the function \"setupForm\"",
    "anonymous function": "A set of related statements with no name assigned to it.",
    "capture phase": "A click event is first tracked in the bubbling phase or the capture phase?",
    "array": "A set of data represented by a single variable name",
    "document.getElementsByClassName(\"sideBar\")[1]": "Write an expression that references the second element in the document belonging to the \"sideBar\" class.",
    "document.getElementsByTagName(\"h1\")[0]": "Write an expression that references the first h1 element within the document.",
    "document.getElementsByName(\"menuChoice\")[2]": "Write an expression that references the third element in the document whose name attribute equals \"menuChoice\".",
    "array.length": "Write the expression that returns the length of an array",
    "document.images[4]": "Write the expression that references the fifth inline image in the document.",
    "callback function": "A function that is passed as a parameter to another function or method.",
    "document.insertAdjacentHTML(\"afterBegin\", text)": "Write a JavaScript method that can be used to insert HTML \"text\" just after an element's opening tag.",
    "forEach()": "What method can be used to apply a function to each element of an array without writing a program loop?",
    "tracing": "A debugging technique that involves examining individual statements in an executing program.",
    "break mode": "The temporary suspension of program execution in a browser so the programmer can monitor values and trace program execution.",
    "call stack": "The ordered list maintained by a JavaScript processor containing all the procedures, such as functions, methods, or event handlers, that have been called but have not yet finished processing.",
    "exception handling": "A method of bulletproofing code that allows a program to handle errors as they occur in the execution of the program.",
    "exception": "An error that occurs in the execution of a program.",
    "throw": "A JavaScript statement used to trigger an error event.",
    "name, message": "The two properties of a built-in error",
    "window.addEventListener(\"error\", processErrors)": "Write a statement that adds an event listener in response to errors, triggering the function \"processErrors\".",
    "catch": "This command will be run when an exception or error is thrown within the code.",
    "return true": "What must be included within an error handling function to replace the browser’s default error reporting methods?",
    "throw": "Use this statement to indicate that an error occured within a try block.",
    "catch": "After a program throws an error, you can use this statement to handle the error.",
    "document.querySelectorAll(\"p.review\")": "Write an expression that creates a node list by selecting all paragraph element nodes beling to a CSS class named \"review\".",
    "false": "(T/F): A node list is the same as an HTML collection",
    "querySelector()": "This method returns the first element node that matches the CSS selector (rather than a complete node list).",
    "document.createElement(\"h1\")": "Write an expression that creates an h1 header.",
    "document.createTextNode(\"Hello world\")": "Write an expression that creates a text node containg the text string \"Hello world\".",
    "true": "(T/F): Nodes support the innerHTML and textContent properities so you can always add HTML code and text to a node as a quick way of creating a document fragment.",
    "node.appendChild()": "This expression adds a node as the last child.",
    "document.createElement(\"div\")": "Write an expression that creates a div.",
    "parentElement.insertBefore(newElement, firstChild)": "Write an expression that appends \"newElement\" in \"parentElement\" before \"firstChild\".",
    "document.getElementById(\"main\").lastElementChild": "Write a statement that references the last child element of the element with the id \"main\".",
    "document.getElementById(\"review\").appendChild(rating)": "Write a statement that appends a variable \"rating\" to a div element with the id \"review\".",
    "about.style.fontSize = \"1.2em\"": "Write a statement that changes the font size of a variable node named \"about\" to 1.2em.",
    "true": "(T/F): If the node is already part of a document tree, the appendChild() method moves the node from its current location to that new position.",
    "about.appendChild(about.firstElementChild)": "Write a statement that moves the first child of a node named \"about\" to the end of the children list.",
    "about.insertBefore(about.lastElementChild, about.firstElementChild)": "Write a statement that moves the last child of a node named \"about\" to the beginning of the children list.",
    "deep copy": "A copy of a node that includes all the node's descendants.",
    "about.cloneNode(true)": "Write an expression that clones a node named \"about\" and all of it's descendants.",
    "about.cloneNode(false)": "Write an expression that clones a node named \"about\" with none of it's descendants.",
    "timeID = window.setInterval(checkAnswers, 1000)" : "Write a statement that repeats the checkAnswers() functin every 10 seconds, storing it in the variable \"timeID\".",
    "clearInterval(timeID)": "Write a statement that stops a function named checkAnswers(), stored in a time id named \"timeID\", from repeating.",
    "window.prompt(\"Hello?\")": "Write a statement that displays the message \"Hello?\" above an input box",
    "window.open()": "This method creates a new browser window.",
    "true": "(T/F): You can create a new window, setting it's height and width, and include form elements, tables, and images, ultimately designing a customized dialog box.",
    "document.body.removeChild(rats)": "Write a statement that removes a node variable named \"rats\" from the HTML body.",
    "continuePlay = window.confirm(\"Continue?\")": "Write a statement that creates a confirmation window with the message \"Continue?\", storing the response in \"continuePlay\".",
    "state = window.prompt(\"Enter your state\", \"MO\")": "Write a statement that creates a prompt window with the message \"Enter your state\" with the default value, \"MO\", stored in \"state\".",
    "myWindow.resizeBy(100, 50)": "Write a statement to increase the width of \"myWindow\" by 100 pixels and the height by 50 pixels.",
    "this": "References the owner of a currently running segment of a JavaScript code.",
    "history object": "The child object of the window object that maintains an internal list of all the documents that have been opened during the current web browser session.",
    "window.history.back()": "Write a statement to go back one page in the history list.",
    "navigator object": "The child object of the window object that is used to obtain information about the current browser.",
    "screen object": "The child object of the window object that is used to obtain information about the display screen’s size, resolution, and color depth.",
    "document.forms": "Because a page can contain multiple web forms, JavaScript organizes forms into this HTML collection...",
    "document.forms.orderForm.reset()": "Write a statement that resets the form with the name \"orderForm\" in the current document.",
    "document.orderForm.username.value = \"John Smith\"": "Write a statement that sets the value of \"username\" in the \"orderForm\" form to \"John Smith\".",
    "document.forms[0].elements[1]": "Write a statement referencing the second element within the first web form on the web page.",
    "document.querySelector('input[name=\"shipping\"]:checked').value": "Write a statement retrieving the value of the checked option in the option group for a field named \"shipping\".",
    "document.forms.shoppingCart.elements.state.onchange = calcShipping": "Write a statement that runs the function calcShipping() when the value of the state field in a form named \"shoppingCart\" is changed.",
    "document.forms.reviewForm.noValidate = true": "Write a statement which turns off the native browser validation for a web form named \"reviewForm\".",
    "document.getElementById(\"reviewDate\").validity.typeMismatch": "Write a statement to indicate whether there is a type mismatch for data entered in the input box with the id \"reviewDate\".",
    "document.getElementById(\"reviewRating\").validity.rangeOverflow": "Write a statement to indicate whether the field with the id \"reviewRating\" has a value greater than allowed by the max attribute.",
    "document.getElementById(\"reviewRating\").setCustomValidity(\"Value too large.\")": "Write a statement to change the validation message for the \"reviewRating\" input box to \"Value too large.\"",
    "/^[A-Z]{3}-\\d{2}$/.test(document.getElementById(\"customerID\").value)": "Write a statement to test whether the value entered into an input box id named \"customerID\" matches the regular expression /^[A-Z]{3}-\\d{2}$/",
    "checksum algorithms": "These algorithms are used to determine whether the digits in a numeric id match specified mathematical conditions. Credit cards use the Lun or mod 10 algorithm.",
    "checkValidity()": "Check whether a field value is true using this method.",
    "validity": "To learn the state of a field's value and why it might be invalid, use this property.",
    "files collection": "A collection of files retrieved using the file data type of the input element.",
    "files object": "A single file within the files collection.",
    "reader = new FileReader()": "Create a new file reader object and store it in the variable \"reader\".",
    "string.length": "Returns the number of characters in \"string\".",
    "sourceText.includes(\" union \")": "Search for a substring \"union\" in a variable named \"sourceText\".",
    "false": "(T/F): Strings are mutable. They can be modified.",
    "string = string.toLowerCase()": "Write a statement that converts a variable \"string\" to lowercase characters.",
    "string.slice(start, end)": "This method extracts a substring from \"string\", between the start and end index values; if no end value is specified the substring extends to the end of the string.",
    "string.split(\".\")": "This method splits \"string\" into an array of string values for each occurence of a \".\"",
    "fReader.readAsText(\"memo.txt\")": "Write a statement that reads the file \"memo.txt\" into the \"fReader\" object as text.",
    "ly Me": "What text string is returned by the expression \"Daily Memo\".slice(3, 8)?",
    "-1": "What value is returned by the expression \"Daily\".localeCompare(\"Memo\")?",
    "/the/gi": "Provide a regular expression to match every occurence of the word \"the\" regardless of case.",
    "/s": "What regular expression symbol matches every character but a whitespace character?",
    "username.sort(byOrders)": "Write a statement to sort the \"username\" array based on the byOrders() compare function.",
    "2": "\"x\" is an array that contains the elements 1, 2, 3, 4, 5, 6. When using the method x.slice(2, 4), how many elements are returned?",
    "x.splice(2, 3, \"h\", \"i\", \"j\")": "Write a statement that replaces \"c\", \"d\" \"e\" from an array \"x\" which contains [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"] with \"h\", \"i\", \"j\"",
    "Math.ceil(x)": "Use the Math object to round \"x\" to the next highest integer.",
    "Math.floor(x)": "Use the Math object to round \"x\" to the next lowest integer.",
    "trialStart = new Date()": "Write a statement storing the current date and time in a variable named \"trialStart\"",
    "object literal": "a standalone object used once for a single purpose",
    "properties": "added to a custom object with name:value pairs within a command block",
    "object properties": "can be referenced using either the dot operator or bracket notation",
    "new Object()":  "Write the command that creates an object literal via constructor",
    "object class": "acts as a template or blueprint for the creation of new objects all sharing a common collection of properties and methods",
    "prototype": "a template for all the properties and methods associated with the object’s class",
    "associative array": "What JavaScript calls Hashmaps",
    "JSON": "a text-based data structure used for storing data using the general structure of key:value pairs within an object",
    "closure": "a copy of a function that also copies the lexical environment of variables within the function",
    "interface": "the programmatic elements that make the inner workings of an object accessible to other programs and scripts",
    "encapsulation": "the process by which all code (primarily properties and methods) and data needed for the object are completely contained within the object itself",
    "placeBet: function() {this.bank--;}": "Write a method, \"placeBet\", for an object that decrements the bank property",
    "true": "(T/F): You can create an object literal such as let object = { methods: function() { commands } };",
    "object instance": "A specific object created from an object class.",
    "object constructor": "A command in the form new Class(parameters) used to create new objects from an object class.",
    "constructor function": "A function used to define an object class.",
    "Player.prototype.placeBet = function()": "Write a Player class prototype method named placeBet",
    "true": "(T/F): You can extend a native object such as \"Array\" with new methods added to their prototypes.",
    "false": "(T/F): An object literal is a definition of an object that can be created multiple times for different contexts",
    "true": "(T/F): An object class is a definition of an object that can be created multiple times for different contexts",
    "function bounceBall(x) {this.speed = x;}": "Write a construction function named \"bounceBall\" which sets a property named \"speed\" to a parameter value \"x\"",
    "let myBall = new bounceBall(50)": "Write a statement to instantiate an object variable named \"myBall\" created from the bounceBall class with a parameter value of 50",
    "constructor": "This function can be thought of as a machine to instantiate objects",
    "prototype": "an object that acts as a template for all the properties and methods associated with the object’s class",
    "bounceBall.prototype.moveBall = function": "Write a statement to add the \"moveBall()\" method to the prototype of the \"bounceBall\" constructor function",
    "lexical scope": "The scope of variables, functions, and other objects is based on their physical location within the source code. (Static Scope)",
    "lexical environment": "The programming environment that encompasses a function and its variables and their values.",
    "closure": "A copy of a function and the lexical environment of the function’s variables.",
    "closure": "“enclose” everything about a function, including its context within a larger source code",
    "public method": "A method defined for the object prototype which can be called outside of the object.",
    "private method": "A method created within the constructor function and thus accessible only within the constructor.",
    "privileged method": "A method that accesses private variables and methods but is also accessible to the public.",
    "closure": "a copy is made of a function and, thus, the lexical environment in which that function exists",
    "false": "(T/F): A closure copies a function's lexical environment, and thus, it optimizes system resources such as system memory",
    "false": "(T/F): A private method is accessible outside of the constructor",
    "true": "(T/F): A private method is a method created within the constructor function and, thus, is accessible only within the constructor",
    "prototype chain": "A hierarchy of objects from a base object class down to lower classes or subclasses",
    "superclass": "An object class at the higher levels of a prototype chain.",
    "subclass": "An object class at the lower levels of a prototype chain",
    "prototypal inheritance": "The process by which the properties and methods of an object class at one level are shared with an object class within a nested level.",
    "true": "(T/F): All prototype chains ultimately find their source in the base object",
    "true": "(T/F): In JavaScript, when defining a prototype chain, start at the lowest subclass and move up the chain to the superclass.",
    "base object": "The fundamental JavaScript object whose properties and methods are shared with all custom and native objects.",
    "object.hasOwnProperty(prop)": "This method returns true if \"object\" has the specified property \"prop\"",
    "Object.keys(obj)": "This method returns an array of the enumerable properties found in \"obj\"",
    "Object.create(proto)": "This method creates an object using the prototype \"proto\"",
    "placeBet.apply(thisObj)": "Write a statement that allows thisObj to borrow the method \"placeBet\"",
    "call()": "similar to the apply() method except that the argument values are placed in a comma-separated list of values instead of an array",
    "associative array": "A data structure with data values defined using key:value pairs.",
    "false": "(T/F): Associative arrays support the JavaScript Array object properties and methods, such as \"length\" or sort().",
    "for (let prop in cars)": "Write a for in loop which references the keys, declaring them \"prop\", within the associative array \"cars\"",
    "true": "(T/F): Only properties that are countable, or enumerable, are accessible to for in loops.",
    "for (let items of list)": "Write a for of loop which references \"items\" of \"list\"",
    "let employees = JSON.parse(JSONtxt)": "Write a statement that parses a JSON text string, stored as \"JSONtxt\", storing it into a new variable named \"employees\"",
    "Clothing.prototype = new Merchandise()": "Write a statement to specify that the \"Clothing\" object class is a subclass of the \"Merchandise\" class.",
    "myCard.hasOwnProperty(\"suit\")": "Write an expression to test whether the \"myCard\" object contains a property named \"suit\".",
    "for in": "Which command should be used to loop through properties of an associative array?",
    "call()": "Use this method to call a method from another object and apply it to the current object with argument values entered in comma-separated list.",
    "stringify()": "Use this method to convert a JavaScript object into a JSON text string.",
    "stateless": "A communication protocol that does not accommodate the storage of data beyond the current session.",
    "Secure Sockets Layer (SSL)": "The main protocol used to encrypt data on websites.",
    "Transport Layer Security (TLS)": "The encryption standard planned to eventually replace SSL.",
    "HTTP request": "Part of the HTTP protocol that is generated each time the web server and client exchange data, consisting of a header containing data about the browser and its capabilities and a body containing information necessary to process the request.",
    "post method": "A method of submitting web forms that appends the form data to the body of the HTTP request.",
    "get method": "A method of sending data to the server that appends the data as part of a query string added to the URL of a web page address.",
    "false": "(T/F): To retrieve data from a form submitted using the get method, you must run a script on the server that can access data stored in the HTTP request.",
    "true": "(T/F): To retrieve data from a form submitted using the post method, you must run a script on the server that can access data stored in the HTTP request.",
    "get method": "This method appends data as part of a text string that is added to the URL of a web page address",
    "post method": "This method appends form data to the body of the HTTP request",
    "decodeURIComponent()": "This method converts a query string of URI encoding into their character equivalent",
    "&": "What character is used within a query string to separate name=value pairs?",
    "Web Storage API": "A JavaScript specification that enables browsers to store data as text strings within an associative array that can be read by the client device using the browser interface.",
    "session storage": "There are two types of storage supported in the Web Storage API: local storage and...",
    "associative array": "Both local storage objects and session storage objects map field names and values into an...",
    "local storage object": "Web storage in which the data is permanently stored by the browser and can be accessed anytime by the user running that browser on that client device.",
    "session storage object": "Web storage in which the data is accessible only during the current session.",
    "localStorage.setItem(\"name\", \"Brandon\")": "Write a statement that stores the key \"name\" and value \"Brandon\" to local storage.",
    "localStorage.length": "Write a statement that references the number of keys in local storage.",
    "localStorage.getItem(\"name\")": "Write a statement, using a method, that retrieves the value of \"name\" in local storage.",
    "localStorage[\"name\"]": "Write a statement, using bracket notation, that retrieves the value of \"name\" in local storage.",
    "localStorage.name": "Write a statement, using dot notation, that retrieves the value of \"name\" in local storage.",
    "false": "(T/F): localStorage.key(8) returns the value of the 8th index key",
    "true": "(T/F): localStorage.key(8) returns the key name of the 8th index key",
    "localStorage.clear()": "Use the clear() method to remove all keys from local storage",
    "localStorage.removeItem(\"name\")": "Write a statement that removes the \"name\" key-value in local storage.",
    "same origin policy": "A set of security standards that restricts how data from one origin can be accessed by web page located at a different origin.",
    "browser": "Local storage permanently stores data in the...",
    "sessionStorage.setItem(\"orderQty\", 5)": "Write a statement to create a session storage object named \"orderQty\" that stores a value of 5.",
    "sessionStorage.removeItem(\"orderQty\")": "Write a statement to delete the orderQty key from session storage.",
    "cookie": "A small piece of information stored as a text string that is exchanged between a web server and client device with every HTTP request.",
    "session cookie": "Cookie that remains available only for the current browser session.",
    "persistent cookie": "A cookie that remains available beyond the current browser session and is stored in a text file on a client computer.",
    "document.cookie = \"state=MO\"": "Write a statement that creates a cookie storing the value \"MO\" in \"state\".",
    "true": "(T/F): All cookies are, by default, session cookies, but their life an be extended by using the expires=date attribute.",
    "token": "A string of random characters used to verify a user’s identity in a system that supports persistent logins.",
    "true": "(T/F): Cookies are stored unencrypted on the client device's hard drive.",
    */
    "synchronous": "The halting of program operation pending a response from a callback function or other code currently being run.",
    "request": "A query sent to a server resource asking for content.",
    "response": "A reply from a server resource when data is requested.",
    "asynchronous": "Type of client-server connection in which client activity continues in the background while waiting for a server response.",
    "HTTP client": "An application, usually a web browser, that makes a request from a server.",
    "HTTP server": "A web server or computer that receives HTTP request and returns a response to HTTP clients.",
    "HTTP message": "A message transferred between a server and client via the HTTP protocol.",
    "caching": "Temporary storage for data on a local device to enable faster access to that data.",
    "AJAX": "Asynchronous JavaScript and XML",
    "AJAX": "A technology for transferring asynchronous HTTP messages between a client and server with particular support for XML documents.",
    "XMLHttpRequest object": "A request object used to send requests from the client to the server over the HTTP communication protocol.",
    "XMLHttpRequest": "XHR",
    "open()": "XHR requests begin with this method which defines where to submit a request and how the request should be processed.",
    "200": "Server request status successful, code...",
    "301": "The requested URL has been permanently moved, code...",
    "302": "The requested URL has been temporarily moved, code...",
    "304": "The client already has the current version of the requested server content, code...",
    "404": "The requested URL was not found, code...",
    "500": "The request could not be completed due to server error, code...",
    "callback hell": "A programming challenge in which callbacks involving multiple asynchronous requests are organized in a large and unwieldy nested structure.",
    "caching": "Most web browsers reduce the amount of data that needs to be retrieved from a server by...",
    "let MyReq = new XMLHttpRequest()": "Provide a statement to create a new request object named \"MyReq\"",
    "MyReq.open(\"get\", \"http://www.example.com\")": "Provide a statement to open the MyReq object to the URL \"http://www.example.com\" using the GET method",
    "xhr.readyState === 4": "What property value indicates that a complete response has been received from the server (using request object variable \"xhr\")?",
    "function expression": "A statement that stores a function as a variable.",
    "fat arrow": "The => symbol that replaces the function keyword in an arrow function.",
    "true": "(T/F): You can create named functions using the const keyword in place of let for both a function expression and an arrow function.",
    "false": "(T/F): In an arrow function, you can insert a line break between the parameters and the fat arrow symbol.",
    "true": "(T/F): Because arrow functions do not have their own this value, they should not be used with event handlers where the this value is needed.",
    "true": "(T/F): Arrow functions should not be used to define object methods or methods for object classes.",
    "promise": "An object that does not have a value currently but might have one in the future once certain conditions are met.",
    "pending, resolved, rejected": "The three states in which a promise exists",
    "promise chain": "A sequence of promises in which each promise relies on the successful resolution of the prior promise.",
    "Fetch API": "A JavaScript API replacement for AJAX that uses promises to manage server requests and responses.",
    "let display = msg => alert(msg)": "Write in arrow function syntax... function display(msg) { alert(msg); }",
    "fetch(\"https://jsonshow/photos\")": "Provide code to send a promise to the \"https://jsonshow/photos\" resource using Fetch.",
    "response.text()": "What method should be applied to a response object (\"response\") to return a promise that can be parsed as text?",
    "XML": "Extensible Markup Language",
    "true": "(T/F): XML is like HTML but allows for flexible, customizable markup tags",
    "RSS newsfeeds": "A technology that uses XML to transmit current news stories to media outlets and podcasts.",
    "GET": "This method is the default Fetch option, and it is used to retrieve server data",
    "true": "(T/F): Because GET is limited to read-only operations, there is no risk of modifying server content",
    "POST": "This method sends data to the server, such as uploading the contents of a web form or adding a new user profile",
    "PUT": "This method changes existing server data via replacing the data with new data",
    "PATCH": "This method modifies existing server data without rewriting the original data.",
    "DELETE": "This method deletes data on a server, such as removing an entire user from a database",
    "true": "(T/F): Other than GET, the name of the method always needs to be included in the message body of a fetch request",
    "let parser = new DOMParser()": "Provide code to create an XML parser stored in \"parser\" object variable",
    "response.json()": "What method parses JSON data received from a response object named \"response\"?",
    "PUT": "What method would you use to change a user profile in a database on a server?",
    "endpoint": "The point of contact between the client and server resource, often specified as the URL that receives the client request.",
    "CORS": "A method of bypassing the same origin policy by including a special HTTP request header in the message from the client to the server.",
    "CORS": "Cross Origin Resource Sharing, which places information with the HTTP message header indicating that such transfers are allowed.",
    "fully qualified domain": "A domain that can receive data from a service resource without hindrance from the browser.",
    "true": "(T/F): If the same-origin policy is violated, the requested data will still be sent, but the browser will not allow JavaScript to access the response.",
    "JSONP": "A technique for requesting data from a server on a different origin in which the request is folded within a script element rather than as a request object or a Fetch promise",
    "JSONP": "JSON with Padding, data transfer across origins prior to CORS",
    "proxy server": "A server that handles an HTTP request for the client rather than relying on the client’s own server.",
    "API endpoint": "the point of contact between the client device and a server resource; essentially, the url to which a server request is made",
    
};


const CYBERSECURITY = {
    "internal threat": "An employee stealing company data could be an example of which kind of threat actor?",
    "hacker": "A general term used to describe any individual who uses their technical knowledge to gain unauthorized access to an organization",
    "script kiddie": "an individual who carries out an attack by using scripts or programs written by more advanced hackers",
    "opportunistic attack": "A hacker scans hundreds of IP addresses randomly on the internet until they find an exploitable target. What kind of attack is this?",
    "staging": "Preparing a computer to perform additional tasks in the attack",
    "reconnaissance": "the process of gathering information about an organization, including system hardware information, network configuration, and individual user information",
    "layering": "the process of implementing multiple security measures to protect the same asset",
    "reconnaissance": "which phase of an attack does the attacker gather information about the target?",
    "confidentiality": "ensures that data is not disclosed to unintended persons",
    "cyber terrorists": "these people generally use the internet to carry out activities such as disrupting network-dependent institutions",
    "non-repudiation": "The ability to prove that a sender undeniably sent a message",
    "privacy": "the protection and confidentiality of personal information",
    "integrity": "protection against alteration",
    "application layer": "this layer of the security model includes user management and web application security",
    "host layer": "this layer of the security model includes log management",
    "physical layer": "this layer of the security model includes environmental controls",
    "data layer": "this layer of the security model includes cryptography",
    "perimeter layer": "this layer of the security model includes securing firewalls",
    "employees": "the single greatest threat to network security",
    "network layer": "this layer of the security model includes penetration testing",
    "botnet": "A collection of zombie computers have been set up to collect personal information. Which type of malware do the zombie computers represent?",
    "fileless virus": "this kind of virus operates only in memory and usually exploits a trusted application like PowerShell to circumvent traditional endpoint security solutions",
    "worm": "a self-replicating program",
    "ransomware": "A type of malware that prevents the system from being used until the victim pays the attacker money",
    "remote access trojan": "this kind of malware provides an attacker with administrative control over a target computer through a backdoor",
    "spyware": "monitors the actions you take on your machine and sends the information back to its originating source",
    "Trojan horse": "a malicious program disguised as legitimate software",
    "virus": "a program that attempts to damage a computer system and replicate itself to other computer systems",
    "social engineering": "Any attack involving human interaction of some kind",
    "social engineering": "Keylogging, impersonation, and shoulder surfing are all examples of this type of attack",
    "super user account": "The root account has all privileges and no barriers. Also known as...",
    "data breach": "when confidential or protected data is exposed",
    "PTZ": "this camera type lets you dynamically move and zoom in on specific areas",
    "technical control": "Passwords, access control lists, and smart cards are all examples of...",
    "administrative control": "Requiring background checks for hiring is an example of a policy or...",
    "piggybacking": "when an authorized or unauthorized individual gains entry into a secured area by exploiting the credentials of a prior person",
    "recovery": "the phase after a breach has occurred in which damage from the event is repaired and a review is made to determine what should be done to prevent future incidents of the same nature",
    "smart card": "access control technology that allows more than just the identity of an individual to be transmitted wirelessly, to either allow or deny access",
    "demilitarized zone": "provides enhanced security by isolating your publicly accessible network from your privately accessible network",
    "air gap": "a security method that physically isolates a portion of the network (such as a computer, a server, or a small network of computers) from the internet or any other unsecured networks",
    "electromagnetic emissions": "Faraday cages are designed to block all...",
    "cable lock": "the best protection against the physical theft of laptops is the placement of a...",
    "locked room": "To control access to the router console, you must keep the router in a...",
    "paper": "Burning, pulping (using water or chemicals), and shredding are three ways to securely dispose of data in which form?",
    "air gap": "A computer or small network that is not connected to the rest of the network or the internet is known as...",
    "USB data blocker": "used to allow a USB device to charge but blocks the data transfer capabilities of the device",
    "demilitarized zone": "an area of the network where extra security is placed to protect the internal network from publicly accessible servers like web servers and email servers",
    "electromagnetic interference": "it is important to follow correct procedures when running electrical cables next to data cables in order to protect against this environmental concern...",
    "hot aisle": "where all of the heat is sent from the servers and network equipment to be transmitted to the HVAC return vent",
    "infrastructure": "power, heating, ventilation, air conditioning systems (HVAC), and utilities are all components of...",
    "uninterruptible power supply": "provides continuous power using batteries for a short period of time, often paired with a backup generator",
    "packet sniffing": "the process of capturing data packets that are flowing across the network and analyzing them for important information",
    "ping": "a command line tool that is used to perform a connection test between two network devices",
    "traceroute": "a tool that shows the path a packet takes to reach its destination",
    "ipconfig": "command tool used to display the IP configuration on the local computer",
    "gain access": "the third phase of the penetration test life cycle; uses the information gathered in earlier phases to exploit discovered vulnerabilities",
    "maintain access": "Which step in the penetration testing life cycle is accomplished using rootkits or Trojan horse programs?",
    "blue team": "team members on the defense of the system",
    "red team": "ethical hacker team performing penetration tests",
    "penetration testing": "the practice of proactively testing systems and policies for vulnerabilities",
    "dig": "Linux tool command that can be used to look up DNS server information and give IP addresses and domain names for a network server",
    "route": "a tool command used in both Windows and Linux to show the routing table and to make manual changes to it",
    "network mapper": "a tool that can discover devices on a network and show those devices in a graphical representation",
    "ping": "a command used to perform a connection test by sending ICMP packets to a specified device on a network and then wait for a response",
    "nmap": "an open-source security scanner used for network enumeration and the creation of network maps",
    "war driving": "the act of searching for wireless networks (802.11) using a signal detector or a network client",
    "false positive": "occur when a scan says there is a vulnerability, but there is none",
    "false negative": "occur when the scanner misses a vulnerability",
    "true negative": "occur when the scanner says there are no vulnerabilities and there are none",
    "true positive": "occur when the scanner shows a vulnerability that does exist",
    "vulnerability scanner": "a tool to gather information about systems such as the applications or services running on a system",
    "port scanner": "used to check for open ports on a system or firewall",
    "spoofing": "the technique of falsifying the source address in a packet",
    "antivirus software": "the most common form of host-based IDS that employs signature or pattern-matching detection methods",
    "procedures layer": "layer: user education; manage network plans; employee onboarding and off-boarding",
    "physical layer": "layer: fences, door locks, mantraps, server cages, cameras, and environmental controls",
    "perimeter layer": "layer: firewalls using ACLs and securing the wireless network",
    "network layer": "layer: the installation and configuration of switches and routers; implementation of VLANs; pen testing; virtualization use",
    "host layer": "layer: log management, OS hardening, patch implementation, auditing, anti-malware, and password attack prevention",
    "application layer": "layer: authentication and authorization, user management, group policies, and web security",
    "data layer": "layer: storage and handling of data, cryptography, and data transmission security",
    "access control list": "network traffic filters that control incoming and outcoming traffic; stateless firewall",
    "capture filter": "records the frames from a specified IP address identified by a filter",
    "firewalking": "uses the traceroute command to discover which services can pass through a firewall or router",
    "port scanning": "pings every port on an external interface or attempts a connection in order to discover which ports are open and active, and which ones are not",
    "fingerprinting": "identifies which operating system the system is running based on how it responds to different types of network traffic",
    "protocol analyzer": "identify traffic that is generated and sent through a network by a specific application running on a device; packet sniffer",
    "packet sniffer": "to monitor network traffic and sort traffic by protocol; protocol analyzer",
    "packet sniffer": "a special software that captures (records) frames transmitted on the network; protocol analyzer",
    "protocol analyzer": "Wireshark is a popular packet sniffer aka a...",
    "ARP poisoning": "when an attacker sends falsified messages to link their MAC address with the IP address of a legitimate computer or server on a network",
    "port mirroring": "creates a duplicate of all network traffic on a port and sends it to another device",
    "MAC flooding": "when an attacker intentionally floods a content-addressable memory table with Ethernet frames, each originating from different MAC addresses",
    "MAC spoofing": "to enable the bypass of access control lists on servers or routers by either hiding a computer on a network or by allowing it to impersonate another network device",
    "ARP poisoning": "an attack that tries to associate an incorrect MAC address with a known IP address",
    "DNS poisoning": "when a name server receives malicious or misleading data that incorrectly maps host names and IP addresses",
    "man in the middle": "a false server intercepts communications from a client by impersonating the intended server",
    "spoofing": "changes or falsifies information in order to mislead or re-direct traffic",
    "brute force": "this technique tests every possible keystroke for each single key in a password until the correct one is found",
    "password salting": "adding random bits of data to a password before it is stored as a hash, making password cracking much more difficult",
    "security incident": "a violation of a security policy",
    "audit trail": "to detect security-violating events or actions",
    "documentation": "the first step after an intrusion is to retain the...",
    "Cyber Kill Chain": "exists to provide visibility to the hurdles of a malicious actor and make it easier to defend your assets",
    "content filtering": "a strategy to keep employees from accessing unauthorized content on the web",
    "mobile device management": "offers a way to remotely monitor, manage, and wipe mobile devices",
    "whitelisting": "this application endpoint-protection rule implicitly denies network access unless added to the rule.",
    "blacklisting": "lists the applications, IP addresses, URLs, email addresses, etc. that are to be blocked from the network",
    "runbook": "a condition-based series of protocols you can use to establish automated processes for security-incident response",
    "playbook": "a checklist style document that specifies the steps to be taken in response to a threat or incident",
    "containment": "You have detected and identified a security event. What's the first step you should complete?",
    "segmentation": "You need to limit the impact of a security breach for a particular file server with sensitive company data. Which strategy would you employ?",
    "isolation": "You need to limit a compromised application from causing harm to other assets in your network. Which strategy should you employ?",
    "segmentation": "a strategic network design to keep the sections of a network separated so that malicious actors cannot pivot within a network.",
    "SOAR": "this compiled information is sent to a security analyst for further action (Security Orchestration, Automation, and Response)",
    "SIEM": "a software tool used to compile and examine multiple data points gathered from across a network (Security Information and Event Management)",
    "alerts": "Which component of the SIEM lets the IT team know that a pre-established parameter is not within the acceptable range?",
    "sensors": "programmed to send customized alerts to the SIEM if certain parameters are not within the acceptable range",
    "trends": "patterns of activity discovered and reported to the SIEM",
    "application log": "these logs show application access, crashes, updates, and any other relevant information that could be valuable in conducting a root cause analysis",
    "dump files": "these files are created when an application, OS, or other computer function stops abruptly",
    "syslog": "a standard, or protocol, for sending log messages to a central logging server",
    "nmap": "a network mapping tool that performs ping and port scans",
    "system log": "this log records operating system, system, and hardware events",
    "web server log": "this log, although tedious to parse, can tell you exactly when users log onto your site and what their location is",
    "x-headers": "What can be put throughout an email's header that provides the originating email account or IP address and not a spoofed one?",
    "chain of custody": "What is the most important element related to evidence in addition to the evidence itself?",
    "chain of custody": "a document related to evidence-gathering that contains details about personnel in possession and control of evidence from the time of discovery up through the time of presentation in court",
    "hashing": "it's purpose is to detect the alteration of the log file",
    "hashing": "the method used to verify that a bit-level image copy of a hard drive is an exact clone of the original hard drive collected as evidence",
    "grep": "this Linux command searches through files for a specified character string",
    "head": "this Linux command shows the first few lines of a file",
    "chmod": "this Linux command assigns or removes permissions to users, groups, or others",
    "tail": "this Linux command shows the last few lines of a file",
    "logger": "this Linux command lets you add entries in the system log file",
    "cat": "this Linux command lists the contents of a file",
    "MAC spoofing": "allows an attacker's computer to connect to a switch using an authorized MAC address",
    "MAC flooding": "the process of intentionally overwhelming the CAM table with Ethernet frames, each originating from a different MAC address",
    "ARP poisoning": "the MAC address of the attacker can be associated with the IP address of another host",
    "port mirroring": "creates a duplicate of all network traffic on a port and sends it to another device",
    "cold site": "a recovery site that may have electricity connected, but there are no servers installed and no high-speed data lines present",
    "hot site": "a real-time full mirror of the primary site, functional and ready to use 24/7",
    "warm site": "a remote network location that maintains a backup of the data, but it is not always current",
    "redundancy": "the primary security feature that can be designed into a network's infrastructure to protect and support availability",
    "clustering": "the connection of multiple servers together so that if one server fails, the others immediately take over its tasks, preventing a disruption in service",
    "service level agreement": "a contract that prescribes the technical support or business parameters a provider bestows to its client",
    "final audit report": "the result of an external auditor's inspection and analysis of an organization's security status",
    "certificate practice statement": "defines the actions and promises of a certificate service authority",
    "mutual aid agreement": "an agreement between two organizations to support each other in the event of a disaster",
    "service level agreement": "a guarantee of a specific level of service from a vendor; SLA",
    "blanket purchase order": "an agreement with a third-party vendor to provide services on an ongoing basis; BPO",
    "altered": "management of change control is necessary any time a production system is...",
    "change control": "used to maintain the current level of security and prevent changes from diminishing that security",
    "residual risk": "the portion of risk that remains after the implementation of a countermeasure",
    "exposure": "the vulnerability of losses from a threat agent, and risk is the likelihood of a vulnerability being exploited",
    "SMTP relay": "an email server that accepts mail and forwards it to other mail servers",
    "email security gateway": "a security solution that monitors emails that are sent to or originate from an organization",
    "email encryption": "digitally signs an email with a certificate providing a form of identity verification",
    "phishing": "a fraudulent email that claims to be from a trusted organization",
    "SMTP server": "attackers often distribute spam by hijacking a misconfigured...",
    "spam": "numerous unwanted and unsolicited email messages being sent to a wide range of victims",
    "confidentiality": "A user copies files from her desktop computer to a USB flash device and puts the device into her pocket. Which security risk is most pressing?",
    "cyber terrorists": "disrupts network-dependent institutions",
    "integrity": "hashing of any sort, including within a digitial signature, provides data...",
    "internal threat": "A user accidentally deletes the new product designs.",
    "physical security": "all hardware and software necessary to secure data, such as firewalls and antivirus software",
    "confidentiality, integrity, availability": "The three main goals of security (CIA)",
    "threat": "any potential danger to the confidentiality, integrity, or availability of information systems",
    "vulnerability": "the absence or weakness of a safeguard that could be exploited",
    "backdoor": "an unprotected entry into a device or system",
    "encryption": "the process of using an algorithm or other method to transform data from plaintext to a difficult-to-interpret cipher text",
    "IDS": "used to detect failures and deficiencies in a firewall; a complimentary product to a firewall; intrusion detection system",
    "incremental backup": "a backup method that copies to tape only those files that have not been marked previously",
    "Kerberos": "an authentication encryption protocol designed to provide security for the initial logon process and service requests; uses symmetric key cryptography",
    "key clustering": "a vulnerability in encryption that occurs when the same message, encrypted with different keys, results in the same cipher text",
    "layering": "when various tasks are divided into a hierarchial manner to provide security",
    "logic bomb": "a program that performs a malicious activity at a specific time or after a triggering event",
    "port scanning": "a specialized method of system scanning that probes all TCP/UDP ports to identify which are open",
    "site survey": "designed to determine how wireless technologies will function within a specific area and what will be required to optimize performance and reliability",
    "SMTP relay": "an e-mail server that is configured to forward e-mail from one system to another",
    "sniffing": "a common network monitoring or diagnostic activity that can be used as a passive malicious attack; duplcates the packets it sees without altering flow",
    "spoofing": "the act of changing or falsifying information in order to mislead or re-direct traffic",
    "subkey": "referred to as a session key or temporary key",
    "system scanning": "vulnerability scanning and penetration testing are both types of...",
    "rootkit": "a set of software tools that enable an unauthorized user to gain control of a computer system without being detected.",
    "asset": "something that has value to an individual or organization",
    "threat actor": "the person or entity that carries out a threat; also a threat agent",
    "exploit": "to take advantage of a vulnerability and carry out an attack",
    "application layer": "this security layer includes user management and web application security",
    "script kiddies": "keeping systems up to date and using standard security practices is the best defense against...",
    "exploitation": "crashing systems is a form of...",
    "rootkit": "a set of programs residing below regular antivirus software detection which requires administrator-level privileges for installation",
    "physical access control": "Which security control, if not applied, can allow an attacker to bypass other security controls?",
    "data exfiltration": "DNS tunneling is a common method that allows an attacker to accomplish which attack?",
    "DNS tunneling": "a method that allows an attacker to hide data being sent to an outside host by disguising it as DNS traffic",
    "identity theft": "when an attacker uses information gained from a data breach to commit fraud by doing things like opening new accounts with the victim's information",
    "reconnaissance": "Which phase or step of a security assessment is a passive activity?",
    "nmap": "an open-source security scanner used for network enumeration and the creation of network maps",
    "OSINT": "Gathering as much personally identifiable information (PII) on a target as possible is a goal of which reconnaissance method?",
    "OSINT": "any data that is collected from publicly available sources (open-source intelligence)",
    "anomaly based IDS": "can recognize and respond to unknown attacks that have not yet been identified or that do not have prescribed protections",
    "host based IDS": "You would like to implement a solution that can scan the contents of the encrypted traffic between two devices to prevent any malicious attacks. What IDS?",
    "antivirus software": "What is the most common form of host-based IDS that employs signature or pattern-matching detection methods?",
    "TCP connection": "a  stateful firewall can only monitor the state of a...",
    "application aware IPS": "You want to implement a network security control that analyzes contents of each packet going to or from a web server. The security control must be able to identify malicious payloads and block them. What IPS?",
    "vulnerability scanner": "You want to be able to identify the services running on a set of servers on your network. Which tool would best give you the information you need?",
    "vulnerability assessment": "You have run a vulnerability scanning tool and identified several patches that need to be applied to a system. What should you do next after applying the patches?",
    "port scanner": "You want to make sure that a set of servers only accepts traffic for specific network services. You want to make sure that the servers do not accept packets sent to those services. Which tool should you use?",
    "ARP poisoning": "A man in the middle attack which occurs at Layer 2",
    "ARP poisoning": "an attacker sends falsified messages to link their MAC address with the IP address of a legitimate computer or server on a network",
    "ARP poisoning": "Which type of attack tries to associate an incorrect MAC address with a known IP address?",
    "DNS poisoning": "Which type of denial-of-service (DoS) attack occurs when a name server receives malicious or misleading data that incorrectly maps host names and IP addresses?",
    "DNS poisoning": "A URL typed in the browser reveals a different website. When you use the IP address, the correct site is displayed. What type of attack has occurred?",
    "DNS poisoning": "An attacker uses an exploit to push a modified hosts file to client systems. This hosts file redirects traffic from legitimate tax preparation sites to malicious sites to gather personal and financial information.",
    "man in the middle": "A false server intercepts communications from a client by impersonating the intended server.",
    "man in the middle": "Capturing packets as they travel from one host to another with the intent of altering the contents of the packets is a form of which type of attack?",
    "spoofing": "Which type of activity changes or falsifies information in order to mislead or re-direct traffic?",
    "password policy": "In a variation of the brute force attack, an attacker may use a predefined list of common usernames and passwords to gain access to existing user accounts. Which countermeasure best addresses this issue?",
    "John the Ripper": "You want to check a server for user accounts that have weak passwords. Which tool should you use?",
    "rainbow table attack": "Which of the following password attacks uses preconfigured matrices of hashed dictionary words?",
    "service level agreement": "Which of the following is defined as a contract that prescribes the technical support or business parameters a provider bestows to its client?",
    "destruction": "In a high-security environment, which of the following is the most important concern when removable media is no longer needed?",
    "every aspect": "Change control should be used to oversee and manage changes over which aspect of an organization?",
    "annualized rate of occurrence": "What is the average number of times that a specific risk is likely to be realized in a single year?",
    "quantitative": "When analyzing assets, which analysis method assigns financial values to assets?",
    "single loss expectancy": "The total monetary loss associated with a single occurrence of a threat. (SLE)",
    "natural": "A broken water pipe that floods the reception area would be considered which type of threat?",
    "recovery time objective": "the actual time required to successfully recover operations in the event of an incident (RTO)",
    "auditing": "Which term identifies the process of reviewing log files for suspicious activity and threshold compliance?",
    "audit trail": "a collection of recorded data that may include details about logons, object access, and other activities deemed important by your security policy and is often used to detect unwanted and unauthorized user activity",
    "audit trail": "A recreation of historical events is made possible through an...",
    "external audit": "Which type of audit is performed by either a consultant or an auditing firm employee?",
    "risk evaluation": "Which component of an IT security audit evaluates defense in depth and IT-related fraud?",
    "usage audit": "Which type of auditing verifies that systems are utilized appropriately and in accordance with written organizational policies?",
    "compensating controls": "Partial control solution that is implemented when a control cannot fully meet a requirement.",
    "deterrent": "Which type of control is used to discourage malicious actors from attempting to breach a network?",
    "managerial": "Which type of control makes use of policies, DPRs, and BCPs?",
    "pulverizing": "Which of the following data destruction techniques uses a punch press or hammer system to crush a hard disk?",
    "degaussing": "the use of strong magnetic fields to remove stored information from a drive; LEAST reliable",
    "privacy": "HIPAA is a set of federal regulations that define security guidelines. What do HIPAA guidelines protect?",
    "confidential": "The lowest level of classified information used by the military",
    "top secret": "If this information is released, it poses grave consequences to national security.",
    "unclassified": "This information can be accessed by the public and poses no security threat.",
    "sensitive": "If this information is disclosed, it could cause some harm, but not a national disaster.",
    "secret": "If this information is disclosed, it could cause severe and permanent damage to military actions.",
    "reputation damage": "Your organization has suffered a data breach, and it was made public. As a result, stock prices have fallen, as consumers no longer trust the organization.",
    "IP theft": "Your organization has discovered that an overseas company has reverse-engineered and copied your main product and is now selling a counterfeit version.",
};


const JAVATERMS = {
    "true": "(T/F): All Java variables must be declared with a name and a type before they can be used.",
    "false": "(T/F): Any fractional part in integer division in simply rounded to the next highest number.",
    "abs(x)": "Write a method for the absolute value of x",
    "ceil(x)": "Write a method that rounds x to the smallest integer not less than x",
    "cos(x)": "Wrte a method for the trigonometric cosine of x",
    "exp(x)": "Write a method for the exponential of x",
    "variable": "A location in the computer's memory where a value can be stored for use later in a program.",
    "logical units": "Regardless of difference in physical appearance, computers can be envisioned as divided into sections or various...",
    "break": "This statement, when executed in a while, for, do..while or switch, causes immediate exit from that statement",
    "method overloading": "Methods of the same name can be declared in the same class, as long as they have different sets of parameters. This is called...",
    "program control": "Specifying the order in which statements (actions) execute in a program",
    "variable type": "Specifies what kind of information is stored at that location in memory.",
    "record": "Several related fields can be used to compose a...",
    "computer programs": "Computers process data under the control of sequences of instructions called...",
    "class variables": "Just as class may contain static methods, a class also may contain static variables. These are called...",
    "field": "A group of characters or bytes that convey a meaning",
    "false": "false || false",
    "true": "false || true",
    "true": "true || true",
    "true": "true || false",
    "false": "false && false",
    "false": "false && true",
    "false": "true && false",
    "true": "true && true",
    "%c": "printf character",
    "%d": "printf decimal (integer) number (base 10)",
    "%e": "printf exponential floating-point number",
    "%f": "printf floating-point number",
    "%i": "printf integer (base 10)",
    "%o": "printf octal number (base 8)",
    "%s": "printf string of characters",
    "%u": "printf unsigned decimal (integer) number",
    "%x": "printf number in hexadecimal (base 16)",
    "%%": "printf percent sign (or \\%)",
    "\\b": "printf backspace",
    "\\n": "printf newline, or linefeed",
    "\\r": "printf carriage return",
    "\\t": "printf tab",
    "false": "(T/F): A variable name must contain a letter, number, underscore, and dollar sign and it cannot begin with a digit. ",
    "true": "(T/F): Real numbers contain decimal points, such as in 3.4 and -11.9.",
    "char": "Primitive type: character data",
    "int": "Primitive type: integer values",
    "float": "Primitive type: real numbers",
    "boolean": "Primitive type: true/false",
    "num1 = input.nextInt();": "Type the assignment statement that will read user input (\"input\") and assigns it to integer variable num1",
    "continue": "When executed in a while, for,or do..while, skips the remaining statement in the loop body and proceeds with the next iteration of the loop.",
    "algorithm": "A procedure for solving a problem in terms of the action to execute and the order in which these actions execute",
    "\\t": "The escape sequence key \"horizontal tab\" is denoted by...",
    "parameter list": "Comma-separated and located in the parenthesis that follow the method name",
    "if": "Single selection statement that performs an indicated action only when the condition is true; otherwise, the action is skipped.",
    "condition": "An expression that can be true or false. ",
    "fields": "Just as characters are composed of bits, these are composed of characters or bytes.",
    "System.out.printf();": "Type the method command that displays formatted data on the screen.",
    "characters": "Digits, letters, and special symbols are known as...",
    "Scanner": "Enables a program to read data for use in a program.",
    "string concatenation": "Java allows you to assemble string objects into larger strings by using operators + or +=. This is known as...",
    "four - while, do while, for, enhanced for": "How many repetition statements does Java provide that enable programs to perform statements repeatedly as long as a condition remains true?",
    "sqrt(x)": "Method for square root of x",
    "pow(x,y)": "Method for x raised to the power of y",
    "min(x,y)": "Method for smaller value of x and y",
    "max(x,y)": "Method for larger value of x and y",
    "1024": "How many bytes = 1 kilobyte?",

}

const DSA = {
    "Average-Case Array Access Time Complexity": "O(1)",
    "Worst-Case Array Access Time Complexity": "O(1)",
    "Average-Case Array Search Time Complexity": "O(n)",
    "Average-Case Array Insertion Time Complexity": "O(n)",
    "Average-Case Array Deletion Time Complexity": "O(n)",
    "Worst-Case Array Search Time Complexity": "O(n)",
    "Worst-Case Array Insertion Time Complexity": "O(n)",
    "Worse-Case Array Deletion Time Complexity": "O(n)",
    "Constant Time": "O(1)",
    "Logarithmic Time": "O(log n)",
    "Linear Time": "O(n)",
    "Quasilinear Time": "O(n log n)",
    "Quadratic Time": "O(n^2)",
    "Factorial Time": "O(n!)",
    "Random access of an element in an array": "O(1)",
    "Inserting at the beginning of a linked list": "O(1)",
    "Binary Search Time Complexity": "O(log n)",
    "Searching through a linked list": "O(n)",
    "Quick Sort Average Time Complexity": "O(n log n)",
    "Quick Sort Worst Time Complexity": "O(n^2)",
    "Merge Sort Time Complexity": "O(n log n)",
    "Heap Sort Time Complexity": "O(n log n)",
    "Insertion Sort Time Complexity": "O(n^2)",
    "Selection Sort Time Complexity": "O(n^2)",
    "Bubble Sort Time Complexity": "O(n^2)",
    "Radix Sort Time Complexity": "O(n)",
    "A loop in a loop is what time complexity?": "O(n^2)",
    "Insertion and deletion at the end of an array": "O(1)",
    "Insertion and deletion at the beginning of an array": "O(1)",
    "Binary Search on sorted arrays time complexity": "O(log n)",
    "Refers to the amount of memory or storage space that a function/algorithm consumes based on the size of its input": "Space Complexity",
    "num1 + num2 :Time Complexity?": "O(1)",
    "Looping through an array :Time Complexity?": "O(n)",
    "Looping through a matrix :Time Complexity?": "O(n^2)", 
    "Sorting Algorithm: values are swapped": "Bubble Sort",
    "Sorting Algorithm: values are distributed into sets or 'buckets'": "Bucket Sort",
    "Sorting Algorithm: look for keywords 'pivot'": "Quick Sort",
    "Sorting Algorithm: the list is continually 'split'": "Merge Sort",
    "Sorting Algorithm: sorting by least/most significant digits": "Radix Sort",
    "Hash Table average time complexity for access, insertion, and deletions": "O(1)",
    "Hash Table collisions can slow down the time complexity to...": "O(n)",
    "Hash Table space complexity": "O(n)",
    "A collection of key/value pairs": "Hash Table",
    
};